import numpy as np

"""
Useful stuff for plotting functions
"""

# Node indices and names sorted after descending mean load
loadOrder = [18, 4, 7, 22, 24, 20, 8, 5, 2, 6, 1, 15, 0, 10, 14,
             9, 11, 12, 16, 21, 17, 19, 3, 26, 13, 29, 27, 23, 28, 25]

loadNames = np.array(['DE', 'FR', 'GB', 'IT', 'ES', 'SE', 'PL', 'NO', 'NL',
                      'BE', 'FI', 'CZ', 'AT', 'GR', 'RO', 'BG', 'PT', 'CH',
                      'HU', 'DK', 'RS', 'IE', 'BA', 'SK', 'HR', 'LT', 'EE',
                      'SI', 'LV', 'LU'], dtype='|S2')

fullNames = ['Germany', 'France', 'Great Britain', 'Italy', 'Spain', 'Sweden', 'Poland',
             'Norway', 'Netherlands', 'Belgium', 'Finland', 'Czech Republic', 'Austria',
             'Greece', 'Romania', 'Bulgaria', 'Portugal', 'Switzerland', 'Hungary',
             'Denmark', 'Serbia', 'Ireland', 'Bosnia & Herz.', 'Slovakia', 'Croatia',
             'Lithuania', 'Estonia', 'Slovenia', 'Latvia', 'Luxembourg']

all_countries = ['AUT', 'FIN', 'NLD', 'BIH', 'FRA', 'NOR', 'BEL', 'GBR', 'POL', 'BGR',
                 'GRC', 'PRT', 'CHE', 'HRV', 'ROU', 'CZE', 'HUN', 'SRB', 'DEU', 'IRL',
                 'SWE', 'DNK', 'ITA', 'SVN', 'ESP', 'LUX', 'SVK', 'EST', 'LVA', 'LTU']

all_links = ['AUT to CHE', 'AUT to CZE', 'AUT to HUN', 'AUT to DEU', 'AUT to ITA',
             'AUT to SVN', 'FIN to SWE', 'FIN to EST', 'NLD to NOR', 'NLD to BEL',
             'NLD to GBR', 'NLD to DEU', 'BIH to HRV', 'BIH to SRB', 'FRA to BEL',
             'FRA to GBR', 'FRA to CHE', 'FRA to DEU', 'FRA to ITA', 'FRA to ESP',
             'NOR to SWE', 'NOR to DNK', 'GBR to IRL', 'POL to CZE', 'POL to DEU',
             'POL to SWE', 'POL to SVK', 'BGR to GRC', 'BGR to ROU', 'BGR to SRB',
             'GRC to ITA', 'PRT to ESP', 'CHE to DEU', 'CHE to ITA', 'HRV to HUN',
             'HRV to SRB', 'HRV to SVN', 'ROU to HUN', 'ROU to SRB', 'CZE to DEU',
             'CZE to SVK', 'HUN to SRB', 'HUN to SVK', 'DEU to SWE', 'DEU to DNK',
             'DEU to LUX', 'SWE to DNK', 'ITA to SVN', 'EST to LVA', 'LVA to LTU']

ISO3ISO2dict = {'AUT': 'AT', 'FIN': 'FI', 'NLD': 'NL', 'BIH': 'BA', 'FRA': 'FR',
                'NOR': 'NO', 'BEL': 'BE', 'GBR': 'GB', 'POL': 'PL', 'BGR': 'BG',
                'GRC': 'GR', 'PRT': 'PT', 'CHE': 'CH', 'HRV': 'HR', 'ROU': 'RO',
                'CZE': 'CZ', 'HUN': 'HU', 'SRB': 'RS', 'DEU': 'DE', 'IRL': 'IE',
                'SWE': 'SE', 'DNK': 'DK', 'ITA': 'IT', 'SVN': 'SI', 'ESP': 'ES',
                'LUX': 'LU', 'SVK': 'SK', 'EST': 'EE', 'LVA': 'LV', 'LTU': 'LT'}

# Dictionary with index of the countries in the shapefiles
shapefile_index = {'AUT': 16, 'BEL': 19, 'BGR': 23, 'BIH': 26, 'CHE': 40, 'CZE': 60,
                   'DEU': 61, 'DNK': 64, 'ESP': 71, 'EST': 72, 'FIN': 74, 'FRA': 77,
                   'GBR': 81, 'GRC': 90, 'HRV': 99, 'HUN': 101, 'IRL': 107, 'ITA': 112,
                   'LTU': 136, 'LUX': 137, 'LVA': 138, 'NLD': 168, 'NOR': 169, 'POL': 182,
                   'PRT': 185, 'ROU': 190, 'SRB': 210, 'SVK': 213, 'SVN': 214, 'SWE': 215}

# Define position of nodes for network figures
pos = {}
pos['AT'] = [0.55, 0.45]
pos['FI'] = [.95, 1.1]
pos['NL'] = [0.40, 0.85]
pos['BA'] = [0.65, 0.15]
pos['FR'] = [0.15, 0.60]
pos['NO'] = [0.5, 1.1]
pos['BE'] = [0.275, 0.775]
pos['GB'] = [0.10, 1.05]
pos['PL'] = [0.75, 0.8]
pos['BG'] = [0.9, 0.0]
pos['GR'] = [0.7, 0.0]
pos['PT'] = [0.0, 0.15]
pos['CH'] = [0.4, 0.45]
pos['HR'] = [0.75, 0.3]
pos['RO'] = [1.0, 0.15]
pos['CZ'] = [0.75, 0.60]
pos['HU'] = [1.0, 0.45]
pos['RS'] = [0.85, 0.15]
pos['DE'] = [0.45, 0.7]
pos['IE'] = [0.0, 0.95]
pos['SE'] = [0.75, 1.0]
pos['DK'] = [0.5, 0.875]
pos['IT'] = [0.4, 0.2]
pos['SI'] = [0.55, 0.3]
pos['ES'] = [0.15, 0.35]
pos['LU'] = [0.325, 0.575]
pos['SK'] = [0.90, 0.55]
pos['EE'] = [1.0, 0.985]
pos['LV'] = [0.975, 0.87]
pos['LT'] = [0.925, 0.77]


# Dictionaries for color maps
blueDict = {'red': ((0.0, 1.0, 1.0), (0.15, 0.0, 0.0), (1.0, 0.0, 0.0)),
            'green': ((0.0, 1.0, 1.0), (0.15, 0.0, 0.0), (1.0, 0.0, 0.0)),
            'blue': ((0.0, 1.0, 1.0), (0.15, 1.0, 1.0), (1.0, 0.3, 0.3))}

blueDict2 = {'red': ((0.0, 1.0, 1.0), (.15, 0, 0), (.4, 0.5, 0.5), (1.0, 1, 1)),
             'green': ((0.0, 1.0, 1.0), (.15, 0, 0), (.4, 0, 0), (1.0, 0.0, 0.0)),
             'blue': ((0.0, 1.0, 1.0), (.15, 1, 1), (.4, 0.5, 0.5), (1.0, 0, 0))}

orangeDict = {'red': ((0.0, 1.0, 1.0), (0.1, 1.0, 1.0), (1.0, 0.3, 0.3)),
              'green': ((0.0, 1.0, 1.0), (0.1, 0.65, .65), (1.0, .1, .1)),
              'blue': ((0.0, 1.0, 1.0), (0.1, 0.0, 0.0), (1.0, 0.0, 0.0))}

brownDict = {'red': ((0.0, 1.0, 1.0), (0.05, 0.57, 0.57), (1.0, 0.2, 0.2)),
             'green': ((0.0, 1.0, 1.0), (0.05, 0.36, .36), (1.0, .12, .12)),
             'blue': ((0.0, 1.0, 1.0), (0.05, 0.15, 0.15), (1.0, 0.01, 0.01))}

redgreendict = {'red': [(0.0, .4, .4), (0.2, .7, .7), (0.5, 1.0, 1.0), (.8, 0.0, 0.0), (1.0, 0.0, 0.0)],
                'green': [(0.0, 0.0, 0.0), (0.2, 0.0, 0.0), (0.5, 1.0, 1.0), (.8, .7, .7), (1.0, .3, .3)],
                'blue': [(0.0, 0.0, 0.0), (0.2, 0.0, 0.0), (0.5, 1.0, 1.0), (.8, 0.0, 0.0), (1.0, 0.0, 0.0)]}

# Sligt modification of matplotlib built in color maps.
# Lowest value is now completely white
Blues_data = {'blue': [(0.0, 1.0, 1.0),
                       (0.125, 0.9686274528503418, 0.9686274528503418),
                       (0.25, 0.93725490570068359, 0.93725490570068359),
                       (0.375, 0.88235294818878174, 0.88235294818878174),
                       (0.5, 0.83921569585800171, 0.83921569585800171),
                       (0.625, 0.7764706015586853, 0.7764706015586853),
                       (0.75, 0.70980393886566162, 0.70980393886566162),
                       (0.875, 0.61176472902297974, 0.61176472902297974),
                       (1.0, 0.41960784792900085, 0.41960784792900085)],

              'green': [(0.0, 1.0, 1.0),
                        (0.125, 0.92156863212585449, 0.92156863212585449),
                        (0.25, 0.85882353782653809, 0.85882353782653809),
                        (0.375, 0.7921568751335144, 0.7921568751335144),
                        (0.5, 0.68235296010971069, 0.68235296010971069),
                        (0.625, 0.57254904508590698, 0.57254904508590698),
                        (0.75, 0.44313725829124451, 0.44313725829124451),
                        (0.875, 0.31764706969261169, 0.31764706969261169),
                        (1.0, 0.18823529779911041, 0.18823529779911041)],

              'red': [(0.0, 1.0, 1.0),
                      (0.125, 0.87058824300765991, 0.87058824300765991),
                      (0.25, 0.7764706015586853, 0.7764706015586853),
                      (0.375, 0.61960786581039429, 0.61960786581039429),
                      (0.5, 0.41960784792900085, 0.41960784792900085),
                      (0.625, 0.25882354378700256, 0.25882354378700256),
                      (0.75, 0.12941177189350128, 0.12941177189350128),
                      (0.875, 0.031372550874948502, 0.031372550874948502),
                      (1.0, 0.031372550874948502, 0.031372550874948502)]}

Oranges_data = {'blue': [(0.0, 1.0, 1.0),
                         (0.125, 0.80784314870834351, 0.80784314870834351),
                         (0.25, 0.63529413938522339, 0.63529413938522339),
                         (0.375, 0.41960784792900085, 0.41960784792900085),
                         (0.5, 0.23529411852359772, 0.23529411852359772),
                         (0.625, 0.074509806931018829, 0.074509806931018829),
                         (0.75, 0.0039215688593685627, 0.0039215688593685627),
                         (0.875, 0.011764706112444401, 0.011764706112444401),
                         (1.0, 0.015686275437474251, 0.015686275437474251)],

                'green': [(0.0, 1.0, 1.0),
                          (0.125, 0.90196079015731812, 0.90196079015731812),
                          (0.25, 0.81568628549575806, 0.81568628549575806),
                          (0.375, 0.68235296010971069, 0.68235296010971069),
                          (0.5, 0.55294120311737061, 0.55294120311737061),
                          (0.625, 0.4117647111415863, 0.4117647111415863),
                          (0.75, 0.28235295414924622, 0.28235295414924622),
                          (0.875, 0.21176470816135406, 0.21176470816135406),
                          (1.0, 0.15294118225574493, 0.15294118225574493)],

                'red': [(0.0, 1.0, 1.0),
                        (0.125, 0.99607843160629272, 0.99607843160629272),
                        (0.25, 0.99215686321258545, 0.99215686321258545),
                        (0.375, 0.99215686321258545, 0.99215686321258545),
                        (0.5, 0.99215686321258545, 0.99215686321258545),
                        (0.625, 0.94509804248809814, 0.94509804248809814),
                        (0.75, 0.85098040103912354, 0.85098040103912354),
                        (0.875, 0.65098041296005249, 0.65098041296005249),
                        (1.0, 0.49803921580314636, 0.49803921580314636)]}

OrRd_data = {'blue': [(0.0, 1.0, 1.0),
                      (0.125, 0.78431373834609985, 0.78431373834609985),
                      (0.25, 0.61960786581039429, 0.61960786581039429),
                      (0.375, 0.51764708757400513, 0.51764708757400513),
                      (0.5, 0.3490196168422699, 0.3490196168422699),
                      (0.625, 0.28235295414924622, 0.28235295414924622),
                      (0.75, 0.12156862765550613, 0.12156862765550613),
                      (0.875, 0.0, 0.0), (1.0, 0.0, 0.0)],

             'green': [(0.0, 1.0, 1.0),
                       (0.125, 0.90980392694473267, 0.90980392694473267),
                       (0.25, 0.83137255907058716, 0.83137255907058716),
                       (0.375, 0.73333334922790527, 0.73333334922790527),
                       (0.5, 0.55294120311737061, 0.55294120311737061),
                       (0.625, 0.3960784375667572, 0.3960784375667572),
                       (0.75, 0.18823529779911041, 0.18823529779911041),
                       (0.875, 0.0, 0.0), (1.0, 0.0, 0.0)],

             'red': [(0.0, 1.0, 1.0),
                     (0.125, 0.99607843160629272, 0.99607843160629272),
                     (0.25, 0.99215686321258545, 0.99215686321258545),
                     (0.375, 0.99215686321258545, 0.99215686321258545),
                     (0.5, 0.98823529481887817, 0.98823529481887817),
                     (0.625, 0.93725490570068359, 0.93725490570068359),
                     (0.75, 0.84313726425170898, 0.84313726425170898),
                     (0.875, 0.70196080207824707, 0.70196080207824707),
                     (1.0, 0.49803921580314636, 0.49803921580314636)]}
